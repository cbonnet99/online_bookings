<script type="text/javascript">
$(document).ready(function() {

   var $calendar = $('#calendar');
   var id = 10;

   var changeButtonColors = function() {
       $("button:contains('save')").hover(function(){$(this).css("background-color", "lightgrey");}, function(){$(this).css("background-color", "white");}).css("color", "#090").css("background", "url('/images/green_tick.gif')").css("background-repeat", "no-repeat").css("padding-left", "20px").css("font-size", "14px");
       $("button:contains('delete')").hover(function(){$(this).css("background-color", "lightgrey");}, function(){$(this).css("background-color", "white");}).css("background", "url('/images/red_x.gif')").css("background-repeat", "no-repeat").css("color", "#C00");
       $("button:contains('delete')").css("background-color", "white").css("padding-left", "20px").css("font-size", "14px");
       $("button:contains('cancel')").html("don't save").hover(function(){$(this).css("background-color", "lightgrey");}, function(){$(this).css("background-color", "white");}).css("background-color", "white").css("color", "black").css("font-size", "14px");
	
   }
	
   var hideFlash = function() {
	$("div#flash_calendar").fadeOut(2000, function(){$(this)});
   };
   var displayFlash = function(flash) {
		if (flash.notice !== undefined && flash.notice !== '') {
			$("div#flash_calendar").html("<div id='flash_notice'>"+flash.notice+"<span id='flash_hide'>Close</span></div>").fadeIn(2000, function(){$(this)});
			$("#flash_hide").click(function(){hideFlash();});
			
		}
		if (flash.error !== undefined && flash.error !== '') {
			console.log(" in NOTICE, flash.error: ", flash.error);
			$("div#flash_calendar").html("<div id='flash_error'>"+flash.error+"</div>").fadeIn(2000, function(){$(this)});
		}
	  };

   $calendar.weekCalendar({
      timeslotsPerHour : 2,
	  defaultEventLength: 2,
	  timeSeparator : "-",
	  dateFormat: "j M Y",
	  timeFormat : "h:ia",
      allowCalEventOverlap : false,
      overlapEventsSeparate: false,
      firstDayOfWeek : 1,
	  newEventText: "New appointment",
      businessHours :{start: <%=pro.biz_hours_start%>, end: <%=pro.biz_hours_end%>, limitDisplay: true },
      daysToShow : 7,
	  buttonText: {
		today: "Today",
		lastWeek: "<",
		nextWeek: ">"
	  },
	  
      height : function($calendar) {
         return $(window).height() - $("h1").outerHeight() - 1;
      },
      eventRender : function(calEvent, $event) {
		<% if own_calendar?(pro, current_pro) -%>
		 if (calEvent.state == "confirmed") {
            $event.css("backgroundColor", "#0C6")
		}
	
		 if ((calEvent.state == "unconfirmed") && (calEvent.start.getTime() > new Date().getTime()) && (calEvent.start.getTime() < new Date(<%=18.hours.from_now.js_args%>).getTime())) {
            $event.css("backgroundColor", "#bf0000");			
		}
		<%end -%>
         if ((calEvent.end.getTime() < new Date().getTime()) || calEvent.readOnly) {
			$event.css("cursor", "default");
            $event.css("backgroundColor", "#aaa");
            $event.find(".wc-time").css({
               "backgroundColor" : "#999",
               "border" : "1px solid #888"
            });
         }
      },
      draggable : function(calEvent, $event) {
		 <% if @current_pro.nil?-%>
         return false;
		<%else -%>
         return ((calEvent.readOnly !== true) && (calEvent.state != "confirmed"));
		<% end -%>
      },
      resizable : function(calEvent, $event) {
         // return calEvent.readOnly != true;
		return false;
      },
      eventNew : function(calEvent, $event) {
         if (calEvent.end.getTime() < new Date().getTime()) {
			$('#calendar').weekCalendar("removeUnsavedEvents"); 
			alert("Sorry, you can not book an appointment in the past");
			return false;
		 }
		 else {
			
	         var $dialogContent = $("#event_edit_container");
	         resetForm($dialogContent);
	         var startField = $dialogContent.find("select[name='start']").val(calEvent.start);
	         var endField = $dialogContent.find("select[name='end']").val(calEvent.end);
	         var titleField = $dialogContent.find("input[name='title']").val('<%=current_client.try(:name)%>');
	         var bodyField = $dialogContent.find("textarea[name='body']");
			 <% if own_calendar?(pro, current_pro) -%>
	         var clientField = $dialogContent.find("select[name='client_id']");
			 <%end -%>
			
			if ($dialogContent.find("input[name='title']").is(":visible")) {
				//retrieve current client name
				$.get("<%=client_name_url%>", {"format": "json"}, function(data){
					$dialogContent.find("input[name='title']").val(data.name);
				}, "json");
			}

	         $dialogContent.dialog({
	            modal: true,
	            title: "New appointment",
	            close: function() {
	               $dialogContent.dialog("destroy");
	               $dialogContent.hide();
	               $('#calendar').weekCalendar("removeUnsavedEvents");
	            },
	            buttons: {
	               save : function() {
					  <% if own_calendar?(pro, current_pro) -%>
	                  calEvent.start = new Date(startField.val());
	                  calEvent.end = new Date(endField.val());
					  <% end -%>
	                  calEvent.title = titleField.val();
	                  calEvent.body = bodyField.val();
					  <% if own_calendar?(pro, current_pro) -%>
					  calEvent.client_id = clientField.val();
					  <% end -%>
					  $.post("<%=practitioner_bookings_url(pro)%>", {"format": "json", "booking[name]": calEvent.title<% if own_calendar?(pro, current_pro) -%>, "booking[client_id]": calEvent.client_id<%end -%>, "booking[comment]": calEvent.body, "booking[starts_at]": calEvent.start.toString(), "booking[ends_at]": calEvent.end.toString()}, function(data){
						if ((data.flash.error === undefined) || (data.flash.error === '')) {
							calEvent.id = data.booking.id;
							calEvent.title = data.booking.title;
		                  	$calendar.weekCalendar("updateEvent", calEvent);
		                 }
		                 $calendar.weekCalendar("removeUnsavedEvents");
		                 $dialogContent.dialog("close");
		                 displayFlash(data.flash);
						}, "json");

	               },
	               cancel : function() {
	                  $dialogContent.dialog("close");
	               }
	            }
	         }).show();

			<% if own_calendar?(pro, current_pro)-%>
	         $dialogContent.find("#date_holder").text($calendar.weekCalendar("formatDate", calEvent.start));
			<% else -%>
			$dialogContent.find("#date_holder").text($calendar.weekCalendar("formatDate", calEvent.start)+": "+$calendar.weekCalendar("formatTime", calEvent.start)+"-"+$calendar.weekCalendar("formatTime", calEvent.end));
			<% end -%>
			<% if own_calendar?(pro, current_pro)-%>
	         setupStartAndEndTimeFields(startField, endField, calEvent, $calendar.weekCalendar("getTimeslotTimes", calEvent.start));
			<% end -%>
         changeButtonColors();
         $("#no-cancellation").css("display", "none");			
		  }
      },
      eventDrop : function(calEvent, $event) {
		  $.post("/practitioners/<%=pro.permalink%>/bookings/"+calEvent.id+".json", {"_method": "PUT", "format": "json", "booking[starts_at]": calEvent.start.toString(), "booking[ends_at]": calEvent.end.toString()}, function(data){
				displayFlash(data.flash);
			}, "json");

      },
      eventResize : function(calEvent, $event) {
      },
      eventClick : function(calEvent, $event) {
         if (calEvent.readOnly) {
            return;
         }

         var $dialogContent = $("#event_edit_container");
         resetForm($dialogContent);
		  <% if own_calendar?(pro, current_pro) -%>
         var startField = $dialogContent.find("select[name='start']").val(calEvent.start);
         var endField = $dialogContent.find("select[name='end']").val(calEvent.end);
		<% end -%>
         var titleField = $dialogContent.find("input[name='title']").val(calEvent.title);
         var bodyField = $dialogContent.find("textarea[name='body']");
         var clientField = $dialogContent.find("select[name='client_id']").val(calEvent.client_id);
         bodyField.val(calEvent.body);
         $dialogContent.dialog({
            modal: true,
            title: "Edit - " + calEvent.title,
            close: function() {
               $dialogContent.dialog("destroy");
               $dialogContent.hide();
               $('#calendar').weekCalendar("removeUnsavedEvents");
            },
            buttons: {
               save : function() {
				  <% if own_calendar?(pro, current_pro) -%>
                  calEvent.start = new Date(startField.val());
                  calEvent.end = new Date(endField.val());
				  <% end -%>
                  if (titleField) {calEvent.title = titleField.val()} else {calEvent.title = ""}
                  calEvent.body = bodyField.val();
				  <% if own_calendar?(pro, current_pro) -%>
				  calEvent.client_id = clientField.val();
				  <% end -%>
				  $.post("/practitioners/<%=pro.permalink%>/bookings/"+calEvent.id+".json", {"_method": "PUT", "format": "json"<% if own_calendar?(pro, current_pro) -%>, "booking[client_id]": calEvent.client_id<%end-%>, "booking[name]": calEvent.title, "booking[comment]": calEvent.body, "booking[starts_at]": calEvent.start.toString(), "booking[ends_at]": calEvent.end.toString()}, function(data){
					if ((data.flash.error === undefined) || (data.flash.error === '')) {
						calEvent.id = data.booking.id;
						calEvent.title = data.booking.title;
		                $calendar.weekCalendar("updateEvent", calEvent);
		             }
		             $dialogContent.dialog("close");
					 displayFlash(data.flash);
					}, "json");
               },
               cancel : function() {
                  $dialogContent.dialog("close");
               },
               "delete" : function() {
				  $.post("/practitioners/<%=pro.permalink%>/bookings/"+calEvent.id+".json", {"_method": "DELETE", "format": "json"}, function(data){
					if ((data.flash.error === undefined) || (data.flash.error === '')) {
	                  $calendar.weekCalendar("removeEvent", calEvent.id);
	                }
	                $dialogContent.dialog("close");
					displayFlash(data.flash);
					}, "json");
               }
            }
         }).show();
         if ((calEvent.state == "unconfirmed") && (calEvent.start.getTime() > new Date().getTime()) && (calEvent.start.getTime() < new Date(<%=pro.no_cancellation_period_in_hours.hours.from_now.js_args%>).getTime())){
	       $("#no-cancellation").css("display", "block");
           $("button:contains('delete')").css("display", "none");
         } else {
	         $("#no-cancellation").css("display", "none");	      
         };

         var startField2 = $dialogContent.find("select[name='start']").val(calEvent.start);
         var endField2 = $dialogContent.find("select[name='end']").val(calEvent.end);
			<% if own_calendar?(pro, current_pro)-%>
	         $dialogContent.find("#date_holder").text($calendar.weekCalendar("formatDate", calEvent.start));
			<% else -%>
			$dialogContent.find("#date_holder").text($calendar.weekCalendar("formatDate", calEvent.start)+": "+$calendar.weekCalendar("formatTime", calEvent.start)+"-"+$calendar.weekCalendar("formatTime", calEvent.end));
			<% end -%>
         setupStartAndEndTimeFields(startField2, endField2, calEvent, 	$calendar.weekCalendar("getTimeslotTimes", calEvent.start));
         $(window).resize().resize(); //fixes a bug in modal overlay size ??
         changeButtonColors();
      },
      eventMouseover : function(calEvent, $event) {
      },
      eventMouseout : function(calEvent, $event) {
      },
      noEvents : function() {

      },
      data : function(start, end, callback) {
		$.getJSON("/practitioners/<%=pro.permalink%>/bookings.json", 
		                  { 
		                     start: start.getTime()/1000, 
		                     end: end.getTime()/1000 
		                  }, 
		                  function(result) {
			                 addFlashCalendar(); 
		                     callback(result); 
		                  });
      }
   });

   function resetForm($dialogContent) {
      $dialogContent.find("input").val("");
      $dialogContent.find("select").val("");
      $dialogContent.find("textarea").val("");
   }

   /*
    * Sets up the start and end time fields in the calendar event
    * form for editing based on the calendar event being edited
    */
   function setupStartAndEndTimeFields($startTimeField, $endTimeField, calEvent, timeslotTimes) {

      for (var i = 0; i < timeslotTimes.length; i++) {
         var startTime = timeslotTimes[i].start;
         var endTime = timeslotTimes[i].end;
         var startSelected = "";
// console.log("startTime.getTime(): ", startTime.getTime());
// console.log(calEvent.title, ": ", calEvent.start, ", ", calEvent.start.getTime());
	// if (startTime.getTime() === calEvent.start.getTime()) {
	if (Math.round(startTime.getTime()/1000) === Math.round(calEvent.start.getTime()/1000)) {
// console.log("========= CLOSE enough");
            startSelected = "selected=\"selected\"";
         }
         var endSelected = "";
         if (Math.round(endTime.getTime()/1000) === Math.round(calEvent.end.getTime()/1000)) {
            endSelected = "selected=\"selected\"";
         }
         $startTimeField.append("<option value=\"" + startTime + "\" " + startSelected + ">" + timeslotTimes[i].startFormatted + "</option>");
         $endTimeField.append("<option value=\"" + endTime + "\" " + endSelected + ">" + timeslotTimes[i].endFormatted + "</option>");

      }
      $endTimeOptions = $endTimeField.find("option");
      $startTimeField.trigger("change");
   }

   var $endTimeField = $("select[name='end']");
   var $endTimeOptions = $endTimeField.find("option");

   //reduces the end time options to be only after the start time options.
   $("select[name='start']").change(function() {
      var startTime = $(this).find(":selected").val();
      var currentEndTime = $endTimeField.find("option:selected").val();
      $endTimeField.html(
            $endTimeOptions.filter(function() {
               return startTime < $(this).val();
            })
      );

      var endTimeSelected = false;
      $endTimeField.find("option").each(function() {
         if ($(this).val() === currentEndTime) {
            $(this).attr("selected", "selected");
            endTimeSelected = true;
            return false;
         }
      });

      if (!endTimeSelected) {
         //automatically select an end date 2 slots away.
         $endTimeField.find("option:eq(1)").attr("selected", "selected");
      }

   });


   var $about = $("#about");

   $("#about_button").click(function() {
      $about.dialog({
         title: "About this calendar demo",
         width: 600,
         close: function() {
            $about.dialog("destroy");
            $about.hide();
         },
         buttons: {
            close : function() {
               $about.dialog("close");
            }
         }
      }).show();
   });


});
</script><% title pro.calendar_title(current_pro)%>
<div id="calendar"></div>
<div id="event_edit_container"> 
	<form> 
		<input type="hidden" /> 
		<p id="date_holder"></p>
		<% if !own_calendar?(pro, current_pro)-%>
		<p id="no-cancellation"><span class="warning">Warning!</span> This appointment will happen in the next <%= pro.no_cancellation_period_in_hours%> hours: it can not be changed. If you need to cancel, please call <%=pro.first_name%> on <span class="phone"><%=pro.phone%></span></p>
		<% end -%>
		<ul class="event-fields"> 
			<% if own_calendar?(pro, current_pro)-%>
			<li> 
				<label for="start"><%= t(:appointment_start_time)%></label><select name="start"><option value="">Select</option></select>
			</li> 
			<li> 
				<label for="end"><%= t(:appointment_end_time)%></label><select name="end"><option value="">Select End Time</option></select> 
			</li> 
			<% end-%>
			<li> 
				<% if own_calendar?(pro, current_pro)-%>
				<label for="title"><%= t(:appointment_client)%></label><select name="client_id"><%= current_pro_client_options(current_pro)-%></select>
				<%else-%>
				<label for="title"><%= t(:appointment_your_name)%></label><input type="text" name="title"></input>
				<%end-%>
			</li> 
			<li> 
				<label for="body"><%= t(:appointment_comment)%></label><textarea name="body"></textarea> 
			</li> 
		</ul> 
	</form> 
</div>